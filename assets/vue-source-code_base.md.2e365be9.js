import{o as s,c as e,e as a}from"./app.17264aa3.js";const n='{"title":"vue源码学习","description":"","frontmatter":{},"headers":[{"level":2,"title":"Flow","slug":"flow"},{"level":2,"title":"源码目录","slug":"源码目录"},{"level":2,"title":"源码构建","slug":"源码构建"},{"level":2,"title":"2个版本","slug":"_2个版本"}],"relativePath":"vue-source-code/base.md","lastUpdated":1633616877889}',p={},r=[a('<h1 id="vue源码学习"><a class="header-anchor" href="#vue源码学习" aria-hidden="true">#</a> vue源码学习</h1><p>vue2</p><h2 id="flow"><a class="header-anchor" href="#flow" aria-hidden="true">#</a> Flow</h2><ul><li>Vue2 的源码利用了 Flow 做了静态类型检查 <ul><li>类型推断</li><li>类型注释</li></ul></li></ul><h2 id="源码目录"><a class="header-anchor" href="#源码目录" aria-hidden="true">#</a> 源码目录</h2><ul><li>Vue2 的源码都在 src 目录下的目录结构</li></ul><div class="language-tex line-numbers-mode"><pre><code>src\n├── compiler        # 编译相关的代码 \n├── core            # vue核心代码 \n├── platforms       # 不同平台的支持\n├── server          # 服务端渲染\n├── sfc             # .vue 文件解析\n├── shared          # 共享代码，工具方法\n</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><ul><li><p>compiler目录：把模板解析成 ast 语法树，ast 语法树优化，代码生成等等</p></li><li><p>core 目录：内置组件、全局 API 封装，Vue 实例化、观察者、虚拟 DOM、工具函数等等</p></li><li><p>platforms目录：跨平台支持，支持web、支持weex</p></li><li><p>server目录：服务端渲染Nodejs代码，把组件渲染为服务器端的 HTML 字符串，将它们直接发送到浏览器</p></li><li><p>sfc目录：把 .vue 文件内容解析成一个 JavaScript 的对象</p></li><li><p>shared目录：工具方法</p></li></ul><h2 id="源码构建"><a class="header-anchor" href="#源码构建" aria-hidden="true">#</a> 源码构建</h2><p>Vue2 源码是基于 <a href="https://github.com/rollup/rollup" target="_blank" rel="noopener noreferrer">Rollup</a> 构建的，构建相关配置都在 scripts 目录下</p><p>package.json 文件 script</p><div class="language-json line-numbers-mode"><pre><code><span class="token punctuation">{</span>\n  <span class="token property">&quot;script&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token property">&quot;build&quot;</span><span class="token operator">:</span> <span class="token string">&quot;node scripts/build.js&quot;</span><span class="token punctuation">,</span>\n    <span class="token property">&quot;build:ssr&quot;</span><span class="token operator">:</span> <span class="token string">&quot;npm run build -- web-runtime-cjs,web-server-renderer&quot;</span><span class="token punctuation">,</span>\n    <span class="token property">&quot;build:weex&quot;</span><span class="token operator">:</span> <span class="token string">&quot;npm run build --weex&quot;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p>从中可以看出构建入口就是scripts目录下的build.js文件。</p><p>具体代码见源码。</p><p>......</p><h2 id="_2个版本"><a class="header-anchor" href="#_2个版本" aria-hidden="true">#</a> 2个版本</h2>',16)];p.render=function(a,n,p,l,t,i){return s(),e("div",null,r)};export{n as __pageData,p as default};
