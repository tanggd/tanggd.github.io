import{o as n,c as s,e as a}from"./app.17264aa3.js";const p='{"title":"vue3 setup script","description":"","frontmatter":{},"headers":[{"level":2,"title":"前言","slug":"前言"},{"level":2,"title":"基础用法","slug":"基础用法"},{"level":2,"title":"defineXXX","slug":"definexxx"},{"level":2,"title":"hook api","slug":"hook-api"},{"level":3,"title":"useCssModule","slug":"usecssmodule"},{"level":2,"title":"其他","slug":"其他"},{"level":3,"title":"getCurrentInstance","slug":"getcurrentinstance"}],"relativePath":"summary/vue/vue3-setup.md","lastUpdated":1633616877889}',t={},e=[a('<h1 id="vue3-setup-script"><a class="header-anchor" href="#vue3-setup-script" aria-hidden="true">#</a> vue3 setup script</h1><h2 id="前言"><a class="header-anchor" href="#前言" aria-hidden="true">#</a> 前言</h2><p>在你的 <code>&lt;script&gt;</code> 上添加 <code>setup </code> 特性：</p><div class="language-vue line-numbers-mode"><pre><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span>{{ msg }}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">setup</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ts<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">\n<span class="token keyword">import</span> <span class="token punctuation">{</span> ref <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue&#39;</span>\n<span class="token keyword">const</span> msg <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token string">&#39;Hello Vue3!&#39;</span><span class="token punctuation">)</span>\n</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><h2 id="基础用法"><a class="header-anchor" href="#基础用法" aria-hidden="true">#</a> 基础用法</h2><h2 id="definexxx"><a class="header-anchor" href="#definexxx" aria-hidden="true">#</a> defineXXX</h2><h2 id="hook-api"><a class="header-anchor" href="#hook-api" aria-hidden="true">#</a> hook api</h2><h3 id="usecssmodule"><a class="header-anchor" href="#usecssmodule" aria-hidden="true">#</a> useCssModule</h3><p>这个方法允许在setup的单文件组件函数中访问 CSS 模块。</p><p>这个api可能大家都不熟悉。在vue2、vue3中，我们习惯性的使用 <a href="https://vue-loader.vuejs.org/zh/guide/scoped-css.html" target="_blank" rel="noopener noreferrer">Scoped CSS</a>, 即在<code>&lt;style scoped&gt;&lt;/style&gt;</code>中写组件独有的样式。而 <a href="https://vue-loader.vuejs.org/zh/guide/css-modules.html" target="_blank" rel="noopener noreferrer">CSS Modules</a>我们却很少使用，其实vue-loader是集成了CSS Modules的。</p><p>在介绍这个api 之前，需要知道 CSS Modules的基本用法。</p><p>vue 中 CSS Modules 的基本用法：</p><div class="language-vue line-numbers-mode"><pre><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">:class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>$style.red<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n      This should be red\n  \t<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">:class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>{ [$style.red]: isRed }<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n      Am I red?\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">:class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>[$style.red, $style.bold]<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n      Red and bold\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">\n<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>\n  <span class="token function">created</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>$style<span class="token punctuation">.</span>red<span class="token punctuation">)</span>\n    <span class="token comment">// -&gt; &quot;red_1VyoJ-uZ&quot;</span>\n    <span class="token comment">// 一个基于文件名和类名生成的标识符</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span> <span class="token attr-name">module</span><span class="token punctuation">&gt;</span></span><span class="token style"><span class="token language-css">\n<span class="token selector">.red</span> <span class="token punctuation">{</span>\n  <span class="token property">color</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n<span class="token selector">.bold</span> <span class="token punctuation">{</span>\n  <span class="token property">font-weight</span><span class="token punctuation">:</span> bold<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br></div></div><div class="language-javascript line-numbers-mode"><pre><code><span class="token comment">// vue-next/packages/runtime-dom/src/helpers/useCssModule.ts</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> warn<span class="token punctuation">,</span> getCurrentInstance <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@vue/runtime-core&#39;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> <span class="token constant">EMPTY_OBJ</span> <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@vue/shared&#39;</span>\n\n<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">useCssModule</span><span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string">&#39;$style&#39;</span><span class="token punctuation">)</span><span class="token operator">:</span> Record<span class="token operator">&lt;</span>string<span class="token punctuation">,</span> string<span class="token operator">&gt;</span> <span class="token punctuation">{</span>\n  <span class="token comment">/* istanbul ignore else */</span>\n  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>__GLOBAL__<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> instance <span class="token operator">=</span> <span class="token function">getCurrentInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">!</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>instance<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      __DEV__ <span class="token operator">&amp;&amp;</span> <span class="token function">warn</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">useCssModule must be called inside setup()</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span>\n      <span class="token keyword">return</span> <span class="token constant">EMPTY_OBJ</span>\n    <span class="token punctuation">}</span>\n    <span class="token keyword">const</span> modules <span class="token operator">=</span> instance<span class="token punctuation">.</span>type<span class="token punctuation">.</span>__cssModules\n    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>modules<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      __DEV__ <span class="token operator">&amp;&amp;</span> <span class="token function">warn</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">Current instance does not have CSS modules injected.</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span>\n      <span class="token keyword">return</span> <span class="token constant">EMPTY_OBJ</span>\n    <span class="token punctuation">}</span>\n    <span class="token keyword">const</span> mod <span class="token operator">=</span> modules<span class="token punctuation">[</span>name<span class="token punctuation">]</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>mod<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      __DEV__ <span class="token operator">&amp;&amp;</span>\n        <span class="token function">warn</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">Current instance does not have CSS module named &quot;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>name<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&quot;.</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span>\n      <span class="token keyword">return</span> <span class="token constant">EMPTY_OBJ</span>\n    <span class="token punctuation">}</span>\n    <span class="token keyword">return</span> mod <span class="token keyword">as</span> Record<span class="token operator">&lt;</span>string<span class="token punctuation">,</span> string<span class="token operator">&gt;</span>\n  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>__DEV__<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      <span class="token function">warn</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">useCssModule() is not supported in the global build.</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span>\n    <span class="token punctuation">}</span>\n    <span class="token keyword">return</span> <span class="token constant">EMPTY_OBJ</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br></div></div><p>简化useCssModule方法定义代码：</p><div class="language-javascript line-numbers-mode"><pre><code><span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">useCssModule</span><span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string">&#39;$style&#39;</span><span class="token punctuation">)</span><span class="token operator">:</span> Record<span class="token operator">&lt;</span>string<span class="token punctuation">,</span> string<span class="token operator">&gt;</span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> instance <span class="token operator">=</span> <span class="token function">getCurrentInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">!</span>\n  <span class="token keyword">const</span> modules <span class="token operator">=</span> instance<span class="token punctuation">.</span>type<span class="token punctuation">.</span>__cssModules\n  <span class="token keyword">const</span> mod <span class="token operator">=</span> modules<span class="token punctuation">[</span>name<span class="token punctuation">]</span>\n  <span class="token keyword">return</span> mod <span class="token keyword">as</span> Record<span class="token operator">&lt;</span>string<span class="token punctuation">,</span> string<span class="token operator">&gt;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>注意：<code>useCssModule</code> 只能在 <code>render</code> 或 <code>setup</code> 函数中使用。</p><p>参考资料：</p><ul><li><a href="https://v3.cn.vuejs.org/api/global-api.html#usecssmodule" target="_blank" rel="noopener noreferrer">https://v3.cn.vuejs.org/api/global-api.html#usecssmodule</a></li><li><a href="https://vue-loader.vuejs.org/zh/guide/css-modules.html" target="_blank" rel="noopener noreferrer">https://vue-loader.vuejs.org/zh/guide/css-modules.html</a></li></ul><h2 id="其他"><a class="header-anchor" href="#其他" aria-hidden="true">#</a> 其他</h2><h3 id="getcurrentinstance"><a class="header-anchor" href="#getcurrentinstance" aria-hidden="true">#</a> getCurrentInstance</h3><p>获取组件实例。</p><div class="language-javascript line-numbers-mode"><pre><code><span class="token keyword">const</span> instance <span class="token operator">=</span> <span class="token function">getCurrentInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>instance<span class="token punctuation">)</span>  <span class="token comment">// </span>\n</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div>',23)];t.render=function(a,p,t,o,c,l){return n(),s("div",null,e)};export{p as __pageData,t as default};
