import{o as n,c as a,e as s}from"./app.17264aa3.js";const e='{"title":"npm","description":"","frontmatter":{},"headers":[{"level":2,"title":"npm钩子","slug":"npm钩子"},{"level":2,"title":"npm执行原理","slug":"npm执行原理"},{"level":2,"title":"npm更新安装包","slug":"npm更新安装包"},{"level":3,"title":"手动更新","slug":"手动更新"},{"level":3,"title":"使用插件 npm-check-updates","slug":"使用插件-npm-check-updates"},{"level":3,"title":"使用yarn","slug":"使用yarn"},{"level":3,"title":"更新指定包","slug":"更新指定包"}],"relativePath":"node/npm/index.md","lastUpdated":1633616877889}',p={},r=[s('<h1 id="npm"><a class="header-anchor" href="#npm" aria-hidden="true">#</a> npm</h1><p>npm 是 Node.js 的包管理器，同 Java 中 maven 类似。</p><h2 id="npm钩子"><a class="header-anchor" href="#npm钩子" aria-hidden="true">#</a> npm钩子</h2><p>npm提供了两种钩子，<strong>pre</strong> 和 <strong>post</strong>，分别代表操作前和操作后。</p><div class="language-json line-numbers-mode"><pre><code><span class="token comment">// package.json</span>\n<span class="token punctuation">{</span>\n    <span class="token property">&quot;scripts&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n        <span class="token property">&quot;build&quot;</span><span class="token operator">:</span> <span class="token string">&quot;node build.js&quot;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>例子：当执行 npm run build 的时候，会按序执行 npm run prebuild &amp;&amp; npm run build &amp;&amp; npm run postbuild。可以在scripts中定义出我们希望执行的 prebuild 和 postbuild 脚本。</p><div class="language-json line-numbers-mode"><pre><code><span class="token comment">// package.json</span>\n<span class="token punctuation">{</span>\n    <span class="token property">&quot;scripts&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n        <span class="token property">&quot;prebuild&quot;</span><span class="token operator">:</span> <span class="token string">&quot;node prebuild.js&quot;</span><span class="token punctuation">,</span>\n        <span class="token property">&quot;build&quot;</span><span class="token operator">:</span> <span class="token string">&quot;node build.js&quot;</span><span class="token punctuation">,</span>\n        <span class="token property">&quot;postbuild&quot;</span><span class="token operator">:</span> <span class="token string">&quot;node postbuild.js&quot;</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p>我们的项目中，开发、打包、部署等操作，可以做一些准备、清理等工作。</p><h2 id="npm执行原理"><a class="header-anchor" href="#npm执行原理" aria-hidden="true">#</a> npm执行原理</h2><p>npm 执行原理：每当执行<code>npm run xxx</code>，就会自动新建一个 Shell，在这个 Shell 里面执行指定的脚本命令。</p><h2 id="npm更新安装包"><a class="header-anchor" href="#npm更新安装包" aria-hidden="true">#</a> npm更新安装包</h2><h3 id="手动更新"><a class="header-anchor" href="#手动更新" aria-hidden="true">#</a> 手动更新</h3><p>修改 package.json 中的依赖包，执行 npm install --force</p><h3 id="使用插件-npm-check-updates"><a class="header-anchor" href="#使用插件-npm-check-updates" aria-hidden="true">#</a> 使用插件 npm-check-updates</h3><p><code>npm install -g npm-check-updates</code><code>ncu</code> // 查看可更新包 <code>ncu</code> -u // 更新package.json <code>npm install</code> // 升级到最新版本</p><h3 id="使用yarn"><a class="header-anchor" href="#使用yarn" aria-hidden="true">#</a> 使用yarn</h3><div class="language-"><pre><code>yarn upgrade\n</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br></div></div><h3 id="更新指定包"><a class="header-anchor" href="#更新指定包" aria-hidden="true">#</a> 更新指定包</h3><div class="language-"><pre><code>npm install xxx@1.2.0\n</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br></div></div>',19)];p.render=function(s,e,p,t,l,o){return n(),a("div",null,r)};export{e as __pageData,p as default};
