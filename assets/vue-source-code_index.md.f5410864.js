import{o as n,c as s,e as a}from"./app.17264aa3.js";const p='{"title":"vue源码学习","description":"","frontmatter":{},"headers":[{"level":2,"title":"Flow","slug":"flow"},{"level":2,"title":"源码目录","slug":"源码目录"},{"level":2,"title":"源码构建","slug":"源码构建"},{"level":2,"title":"vue的2个版本","slug":"vue的2个版本"},{"level":2,"title":"初探vue","slug":"初探vue"}],"relativePath":"vue-source-code/index.md","lastUpdated":1633616877889}',e={},t=[a('<h1 id="vue源码学习"><a class="header-anchor" href="#vue源码学习" aria-hidden="true">#</a> vue源码学习</h1><p>vue2</p><h2 id="flow"><a class="header-anchor" href="#flow" aria-hidden="true">#</a> Flow</h2><ul><li><p><a href="https://flow.org/en/docs/getting-started/" target="_blank" rel="noopener noreferrer">Flow</a> 是 facebook 出品的 JavaScript 静态类型检查工具。</p></li><li><p>Vue2 的源码利用了 Flow 做了静态类型检查</p><ul><li>类型推断</li><li>类型注释</li></ul></li></ul><h2 id="源码目录"><a class="header-anchor" href="#源码目录" aria-hidden="true">#</a> 源码目录</h2><ul><li>Vue2 的源码都在 src 目录下的目录结构</li></ul><div class="language-tex line-numbers-mode"><pre><code>src\n├── compiler        # 编译相关的代码 \n├── core            # vue核心代码 \n├── platforms       # 不同平台的支持\n├── server          # 服务端渲染\n├── sfc             # .vue 文件解析\n├── shared          # 共享代码，工具方法\n</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><ul><li><p>compiler目录：把模板解析成 ast 语法树，ast 语法树优化，代码生成等等</p></li><li><p>core 目录：内置组件、全局 API 封装，Vue 实例化、观察者、虚拟 DOM、工具函数等等</p></li><li><p>platforms目录：跨平台支持，支持web、支持weex</p></li><li><p>server目录：服务端渲染Nodejs代码，把组件渲染为服务器端的 HTML 字符串，将它们直接发送到浏览器</p></li><li><p>sfc目录：把 .vue 文件内容解析成一个 JavaScript 的对象</p></li><li><p>shared目录：工具方法</p></li></ul><h2 id="源码构建"><a class="header-anchor" href="#源码构建" aria-hidden="true">#</a> 源码构建</h2><p>Vue2 源码是基于 <a href="https://github.com/rollup/rollup" target="_blank" rel="noopener noreferrer">Rollup</a> 构建的，构建相关配置都在 scripts 目录下</p><p>package.json 文件 script</p><div class="language-json line-numbers-mode"><pre><code><span class="token punctuation">{</span>\n  <span class="token property">&quot;script&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token property">&quot;build&quot;</span><span class="token operator">:</span> <span class="token string">&quot;node scripts/build.js&quot;</span><span class="token punctuation">,</span>\n    <span class="token property">&quot;build:ssr&quot;</span><span class="token operator">:</span> <span class="token string">&quot;npm run build -- web-runtime-cjs,web-server-renderer&quot;</span><span class="token punctuation">,</span>\n    <span class="token property">&quot;build:weex&quot;</span><span class="token operator">:</span> <span class="token string">&quot;npm run build --weex&quot;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p>从中可以看出构建入口就是scripts目录下的build.js文件。</p><p>具体代码见源码。</p><p>......</p><h2 id="vue的2个版本"><a class="header-anchor" href="#vue的2个版本" aria-hidden="true">#</a> vue的2个版本</h2><p>使用vue-cli初始化项目时，会询问我们选择使用哪个版本。</p><ul><li>Runtime Only <ul><li>这个版本只包含运行时的 <code>vuejs</code> 代码，没有vue编译代码。</li><li>体积，相对而言更轻量些。</li><li>.vue文件编译成JavaScript，需要使用工具vue-loader做预编译。</li></ul></li><li>Runtime + Compiler <ul><li>这个版本没有对代码做预编译。所以是 运行时vuejs代码 + .vue编译代码。</li><li>代码配置项含有 template 配置项的，就需要编译。把template 编译成 render 函数，然后再渲染。</li><li>这个版本运行时就必须带有模板编译的过程，从而导致一定的性能损耗。</li></ul></li></ul><p>所以，推荐的是Runtime Only版本的vuejs。</p><h2 id="初探vue"><a class="header-anchor" href="#初探vue" aria-hidden="true">#</a> 初探vue</h2><p>src/core/index.js</p><div class="language-javascript line-numbers-mode"><pre><code><span class="token keyword">import</span> Vue <span class="token keyword">from</span> <span class="token string">&#39;./instance/index&#39;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> initGlobalAPI <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;./global-api/index&#39;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> isServerRendering <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;core/util/env&#39;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> FunctionalRenderContext <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;core/vdom/create-functional-component&#39;</span>\n\n<span class="token function">initGlobalAPI</span><span class="token punctuation">(</span>Vue<span class="token punctuation">)</span>\n\nObject<span class="token punctuation">.</span><span class="token function">defineProperty</span><span class="token punctuation">(</span><span class="token class-name">Vue</span><span class="token punctuation">.</span>prototype<span class="token punctuation">,</span> <span class="token string">&#39;$isServer&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>\n  get<span class="token operator">:</span> isServerRendering\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n\nObject<span class="token punctuation">.</span><span class="token function">defineProperty</span><span class="token punctuation">(</span><span class="token class-name">Vue</span><span class="token punctuation">.</span>prototype<span class="token punctuation">,</span> <span class="token string">&#39;$ssrContext&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>\n  <span class="token function">get</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token comment">/* istanbul ignore next */</span>\n    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>$vnode <span class="token operator">&amp;&amp;</span> <span class="token keyword">this</span><span class="token punctuation">.</span>$vnode<span class="token punctuation">.</span>ssrContext\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n\n<span class="token comment">// expose FunctionalRenderContext for ssr runtime helper installation</span>\nObject<span class="token punctuation">.</span><span class="token function">defineProperty</span><span class="token punctuation">(</span>Vue<span class="token punctuation">,</span> <span class="token string">&#39;FunctionalRenderContext&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>\n  value<span class="token operator">:</span> FunctionalRenderContext\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n\nVue<span class="token punctuation">.</span>version <span class="token operator">=</span> <span class="token string">&#39;__VERSION__&#39;</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> Vue\n</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br></div></div><p>src/core/instance/index.js</p><div class="language-javascript line-numbers-mode"><pre><code><span class="token keyword">import</span> <span class="token punctuation">{</span> initMixin <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;./init&#39;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> stateMixin <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;./state&#39;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> renderMixin <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;./render&#39;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> eventsMixin <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;./events&#39;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> lifecycleMixin <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;./lifecycle&#39;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> warn <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;../util/index&#39;</span>\n\n<span class="token keyword">function</span> <span class="token function">Vue</span> <span class="token punctuation">(</span><span class="token parameter">options</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">if</span> <span class="token punctuation">(</span>process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">NODE_ENV</span> <span class="token operator">!==</span> <span class="token string">&#39;production&#39;</span> <span class="token operator">&amp;&amp;</span>\n    <span class="token operator">!</span><span class="token punctuation">(</span><span class="token keyword">this</span> <span class="token keyword">instanceof</span> <span class="token class-name">Vue</span><span class="token punctuation">)</span>\n  <span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token function">warn</span><span class="token punctuation">(</span><span class="token string">&#39;Vue is a constructor and should be called with the `new` keyword&#39;</span><span class="token punctuation">)</span>\n  <span class="token punctuation">}</span>\n  <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">_init</span><span class="token punctuation">(</span>options<span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n\n<span class="token comment">// 给 Vue 的 prototype 上扩展方法</span>\n<span class="token comment">// 扩展方法分别在各自的模块中实现</span>\n<span class="token function">initMixin</span><span class="token punctuation">(</span>Vue<span class="token punctuation">)</span>\n<span class="token function">stateMixin</span><span class="token punctuation">(</span>Vue<span class="token punctuation">)</span>\n<span class="token function">eventsMixin</span><span class="token punctuation">(</span>Vue<span class="token punctuation">)</span>\n<span class="token function">lifecycleMixin</span><span class="token punctuation">(</span>Vue<span class="token punctuation">)</span>\n<span class="token function">renderMixin</span><span class="token punctuation">(</span>Vue<span class="token punctuation">)</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> Vue\n</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br></div></div><p>Vue 是使用 function 实现的类，而不是 class 。</p><p>为什么不使用class？</p><p>xxxMixin 系列函数的调用，以 Vue 作为参数，给 Vue 的 prototype 上扩展了一些方法，各自的方法分别在各自的模块中维护，而不是在一个模块中去维护。这样的维护方式，class 难以实现。</p><p>这样的方式好处：方便维护和管理代码。</p><p>值得学习的编程技巧。</p><p>src/core/global-api/index.js</p><div class="language-javascript line-numbers-mode"><pre><code><span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">initGlobalAPI</span> <span class="token punctuation">(</span><span class="token parameter">Vue<span class="token operator">:</span> GlobalAPI</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token comment">// config</span>\n  <span class="token keyword">const</span> configDef <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>\n  configDef<span class="token punctuation">.</span><span class="token function-variable function">get</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> config\n  <span class="token keyword">if</span> <span class="token punctuation">(</span>process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">NODE_ENV</span> <span class="token operator">!==</span> <span class="token string">&#39;production&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    configDef<span class="token punctuation">.</span><span class="token function-variable function">set</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n      <span class="token function">warn</span><span class="token punctuation">(</span>\n        <span class="token string">&#39;Do not replace the Vue.config object, set individual fields instead.&#39;</span>\n      <span class="token punctuation">)</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span>\n  Object<span class="token punctuation">.</span><span class="token function">defineProperty</span><span class="token punctuation">(</span>Vue<span class="token punctuation">,</span> <span class="token string">&#39;config&#39;</span><span class="token punctuation">,</span> configDef<span class="token punctuation">)</span>\n\n  <span class="token comment">// exposed util methods.</span>\n  <span class="token comment">// NOTE: these are not considered part of the public API - avoid relying on</span>\n  <span class="token comment">// them unless you are aware of the risk.</span>\n  Vue<span class="token punctuation">.</span>util <span class="token operator">=</span> <span class="token punctuation">{</span>\n    warn<span class="token punctuation">,</span>\n    extend<span class="token punctuation">,</span>\n    mergeOptions<span class="token punctuation">,</span>\n    defineReactive\n  <span class="token punctuation">}</span>\n\n  Vue<span class="token punctuation">.</span>set <span class="token operator">=</span> <span class="token keyword">set</span>\n  Vue<span class="token punctuation">.</span>delete <span class="token operator">=</span> del\n  Vue<span class="token punctuation">.</span>nextTick <span class="token operator">=</span> nextTick\n\n  Vue<span class="token punctuation">.</span>options <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span>\n  <span class="token constant">ASSET_TYPES</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">type</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n    Vue<span class="token punctuation">.</span>options<span class="token punctuation">[</span>type <span class="token operator">+</span> <span class="token string">&#39;s&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span>\n\n  <span class="token comment">// this is used to identify the &quot;base&quot; constructor to extend all plain-object</span>\n  <span class="token comment">// components with in Weex&#39;s multi-instance scenarios.</span>\n  Vue<span class="token punctuation">.</span>options<span class="token punctuation">.</span>_base <span class="token operator">=</span> Vue\n\n  <span class="token function">extend</span><span class="token punctuation">(</span>Vue<span class="token punctuation">.</span>options<span class="token punctuation">.</span>components<span class="token punctuation">,</span> builtInComponents<span class="token punctuation">)</span>\n\n  <span class="token function">initUse</span><span class="token punctuation">(</span>Vue<span class="token punctuation">)</span>\n  <span class="token function">initMixin</span><span class="token punctuation">(</span>Vue<span class="token punctuation">)</span>\n  <span class="token function">initExtend</span><span class="token punctuation">(</span>Vue<span class="token punctuation">)</span>\n  <span class="token function">initAssetRegisters</span><span class="token punctuation">(</span>Vue<span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br></div></div><p><code>initGlobalAPI</code> 为 Vue 扩展了全局静态工具方法。</p><p><a href="https://cn.vuejs.org/v2/api/#%E5%85%A8%E5%B1%80-API" target="_blank" rel="noopener noreferrer">Vue全局API https://cn.vuejs.org/v2/api/#%E5%85%A8%E5%B1%80-API</a></p>',33)];e.render=function(a,p,e,o,c,l){return n(),s("div",null,t)};export{p as __pageData,e as default};
